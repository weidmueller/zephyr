# ARM Cortex-A and Cortex-R platform configuration options

# Copyright (c) 2018 Marvell
# Copyright (c) 2018 Lexmark International, Inc.
# Copyright (c) 2020 Weidmueller Interface GmbH & Co. KG
# SPDX-License-Identifier: Apache-2.0

# NOTE: We have the specific core implementations first and outside of the
# if CPU_CORTEX_A / if CPU_CORTEX_R block so that SoCs can select which core
# they are using without having to select all the options related to that 
# core. Everything else is captured inside the if if CPU_CORTEX_A / if 
# CPU_CORTEX_R blocks so they are not exposed if one selects a different ARM 
# Cortex Family (Cortex-M).

config CPU_CORTEX_A9
	bool
	select CPU_CORTEX_A
	select ARMV7_A
	select CPU_HAS_FPU_DOUBLE_PRECISION
	select CPU_HAS_ARM_MMU
	
	help
	  This option signifies the use of a Cortex-A9 CPU

if CPU_CORTEX_A

config ARMV7_A
	bool
	select ATOMIC_OPERATIONS_BUILTIN
	select ISA_ARM
	select ARMV7_A_MMU if CPU_HAS_ARM_MMU
	select ARMV7_A_FP if CPU_HAS_FPU_DOUBLE_PRECISION
	help
	  This option signifies the use of an ARMv7-A processor
	  implementation.

	  From https://developer.arm.com/products/architecture/cpu-architecture/a-profile:
	  The Armv7-A architecture implements a traditional Arm architecture with 
	  multiple modes, supports a Virtual Memory System Architecture (VMSA) 
	  based on a Memory Management Unit (MMU), and supports the Arm (A32) and 
	  Thumb (T32) instruction sets.

config ARMV7_A_FP
	bool
	depends on ARMV7_A
	help
	  This option signifies the use of an ARMv7-A processor implementation
	  supporting the VFPv3-D32 Floating-Point Extension.

config ARMV7_A_MMU
	bool
	depends on ARMV7_A
	help
	  This option signifies the use of an ARMv7-A processor
	  implementation supporting the ARM Memory Management Unit (MMU).

config ARMV7_EXCEPTION_STACK_SIZE
	int "Undefined Instruction and Abort stack size (in bytes)"
	default 256
	help
	  This option specifies the size of the stack used by the undefined
	  instruction and data abort exception handlers.

config ARMV7_FIQ_STACK_SIZE
	int "FIQ stack size (in bytes)"
	default 256
	help
	  This option specifies the size of the stack used by the FIQ handler.

config ARMV7_SVC_STACK_SIZE
	int "SVC stack size (in bytes)"
	default 512
	help
	  This option specifies the size of the stack used by the SVC handler.

config ARMV7_SYS_STACK_SIZE
	int "SYS stack size (in bytes)"
	default 1024
	help
	  This option specifies the size of the stack used by the system mode.

config RUNTIME_NMI
	default y

config GEN_ISR_TABLES
	default y

config GEN_IRQ_VECTOR_TABLE
	default n

endif # CPU_CORTEX_A

config CPU_CORTEX_R4
	bool
	select CPU_CORTEX_R
	select ARMV7_R
	select ARMV7_R_FP if CPU_HAS_FPU
	help
	  This option signifies the use of a Cortex-R4 CPU

config CPU_CORTEX_R5
	bool
	select CPU_CORTEX_R
	select ARMV7_R
	select ARMV7_R_FP if CPU_HAS_FPU
	help
	  This option signifies the use of a Cortex-R5 CPU

if CPU_CORTEX_R

config ARMV7_R
	bool
	select ATOMIC_OPERATIONS_BUILTIN
	select ISA_ARM
	select ISA_THUMB2
	help
	  This option signifies the use of an ARMv7-R processor
	  implementation.

	  From https://developer.arm.com/products/architecture/cpu-architecture/r-profile:
	  The Armv7-R architecture implements a traditional Arm architecture with
	  multiple modes and supports a Protected Memory System Architecture
	  (PMSA) based on a Memory Protection Unit (MPU). It supports the Arm (32)
	  and Thumb (T32) instruction sets.

config ARMV7_R_FP
	bool
	depends on ARMV7_R
	help
	  This option signifies the use of an ARMv7-R processor
	  implementation supporting the VFPv3-D16 Floating-Point Extension.

config ARMV7_EXCEPTION_STACK_SIZE
	int "Undefined Instruction and Abort stack size (in bytes)"
	default 256
	help
	  This option specifies the size of the stack used by the undefined
	  instruction and data abort exception handlers.

config ARMV7_FIQ_STACK_SIZE
	int "FIQ stack size (in bytes)"
	default 256
	help
	  This option specifies the size of the stack used by the FIQ handler.

config ARMV7_SVC_STACK_SIZE
	int "SVC stack size (in bytes)"
	default 512
	help
	  This option specifies the size of the stack used by the SVC handler.

config ARMV7_SYS_STACK_SIZE
	int "SYS stack size (in bytes)"
	default 1024
	help
	  This option specifies the size of the stack used by the system mode.

config RUNTIME_NMI
	default y

config GEN_ISR_TABLES
	default y

config GEN_IRQ_VECTOR_TABLE
	default n

endif # CPU_CORTEX_R

# Floating Point Unit configuration options
# Identical for VFPv3-D32 (Cortex-A) and VFPv3-D16 (Cortex-R, optional)

menu "VFPv3(-D32/-D16) Floating Point Unit options"
	depends on ARMV7_A_FP || ARMV7_R_FP

choice
	prompt "FPU Half-precision format"
	depends on ARMV7_A_FP || ARMV7_R_FP
	default ARMV7_FP_AHP_IEEE

config ARMV7_FP_AHP_IEEE
	bool "IEEE half-precision format"
	help
	  IEEE half-precision format.

config ARMV7_FP_AHP_ALT
	bool "Alternative half-precision"
	help
	  Alternative half-precision.

endchoice

choice
	prompt "FPU Default NaN mode (doesn't apply to advanced SIMD arithmetic)"
	depends on ARMV7_A_FP || ARMV7_R_FP
	default ARMV7_FP_NAN_PROPAGATE

config ARMV7_FP_NAN_PROPAGATE
	bool "Propagate NaN operands"
	help
	  Propagate NaN operands through to the output of a floating point operation.

config ARMV7_FP_NAN_RETURN_NAN
	bool "Return default NaN"
	help
	  Any operation involving one or more NaNs returns the default NaN.

endchoice

choice
	prompt "FPU Flush to zero mode (doesn't apply to advanced SIMD arithmetic)"
	depends on ARMV7_A_FP || ARMV7_R_FP
	default ARMV7_FP_FTZ_DISABLED

config ARMV7_FP_FTZ_DISABLED
	bool "Disabled, IEEE 754 compliant behavior"
	help
	  Flush to zero mode disabled. Behavior of the floating point system is
	  fully compliant with the IEEE 754 standard.

config ARMV7_FP_FTZ_FLUSH
	bool "Enabled"
	help
	  Flush to zero mode enabled.

endchoice

choice
	prompt "FPU Rounding mode (doesn't apply to advanced SIMD arithmetic)"
	depends on ARMV7_A_FP || ARMV7_R_FP
	default ARMV7_FP_ROUNDING_RN

config ARMV7_FP_ROUNDING_RN
	bool "Round to nearest"
	help
	  Round to nearest mode.

config ARMV7_FP_ROUNDING_RP
	bool "Round to plus infinity"
	help
	  Round to plus infinity mode.

config ARMV7_FP_ROUNDING_RM
	bool "Round to minus infinity"
	help
	  Round to minus infinity mode.

config ARMV7_FP_ROUNDING_RZ
	bool "Round to zero"
	help
	  Round to zero mode.

endchoice

endmenu